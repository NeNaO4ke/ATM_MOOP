{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/atm-header/atm-header.component.ts","./src/app/components/atm-header/atm-header.component.html","./src/app/components/atm-list/atm-list.component.ts","./src/app/components/atm-list/atm-list.component.html","./src/app/components/atm-login/atm-login.component.ts","./src/app/components/atm-login/atm-login.component.html","./src/app/components/atm-main-menu/atm-main-menu.component.ts","./src/app/components/atm-main-menu/atm-main-menu.component.html","./src/app/components/atm-window/atm-window.component.ts","./src/app/components/atm-window/atm-window.component.html","./src/app/interfaces/app.interfaces.ts","./src/app/pages/my-accounts/my-accounts.component.ts","./src/app/pages/my-accounts/my-accounts.component.html","./src/app/services/account.service.ts","./src/app/services/atm-http.service.ts","./src/app/services/navigation.service.ts","./src/app/services/utils.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject, map, mergeMap, of, switchMap } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { AtmInfo } from './interfaces/app.interfaces';\nimport { AtmHttpService } from './services/atm-http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'ATM';\n\n  constructor(\n  ) {}\n\n  ngOnInit(): void {\n\n    // const headers = new HttpHeaders({'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/x-www-form-urlencoded'});\n\n    // this.http.post(\n    //   `${environment.backApi}/login`,\n    //   'number=2440735783328557&pin=5384&atm=1', //{\"number\": 2440735783328557, \"pin\": 5384, \"atm\": 1},\n    //   {headers}\n    // )\n    // // of('')\n    // .pipe(\n    //   switchMap(res => {\n    //     console.log(res);\n    //     return this.http.get(`${environment.backApi}/account/plans`, {headers, withCredentials: true})\n    //   })\n    // )\n    // .subscribe(e => {\n    //   console.log(e);\n    // })\n  }\n}\n","<div style=\"display: flex\">\n\n  <app-atm-window></app-atm-window>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormBuilder, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AtmListComponent } from './components/atm-list/atm-list.component';\nimport { AtmLoginComponent } from './components/atm-login/atm-login.component';\nimport { AtmMainMenuComponent } from './components/atm-main-menu/atm-main-menu.component';\nimport { AtmWindowComponent } from './components/atm-window/atm-window.component';\nimport { AtmHttpService } from './services/atm-http.service';\nimport { UtilsService } from './services/utils.service';\nimport { AtmHeaderComponent } from './components/atm-header/atm-header.component';\nimport { MyAccountsComponent } from './pages/my-accounts/my-accounts.component';\nimport { NavigationService } from './services/navigation.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AtmWindowComponent,\n    AtmListComponent,\n    AtmLoginComponent,\n    AtmMainMenuComponent,\n    AtmHeaderComponent,\n    MyAccountsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    AtmHttpService,\n    FormBuilder,\n    UtilsService,\n    NavigationService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AtmStates } from 'src/app/interfaces/app.interfaces';\nimport { AccountService } from 'src/app/services/account.service';\nimport { NavigationService } from 'src/app/services/navigation.service';\n\n@Component({\n  selector: 'app-atm-header',\n  templateUrl: './atm-header.component.html',\n  styleUrls: ['./atm-header.component.scss']\n})\nexport class AtmHeaderComponent implements OnInit {\n\n  ATM_STATES = AtmStates;\n\n  constructor(\n    private accountService: AccountService,\n    public navigationService: NavigationService\n  ) { }\n\n  @Input() lastState?: AtmStates;\n\n  currentState$ = this.accountService.atmState$;\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"header-btn-container\" >\n  <div fxFlex=\"33\" style=\"text-align: start;\">\n    <button *ngIf=\"lastState\" (click)=\"navigationService.goTo(lastState)\">Back</button>\n  </div>\n  <div fxFlex=\"33\" style=\"text-align: center;\">\n    {{currentState$ | async}}\n  </div>\n  <div fxFlex=\"33\" style=\"text-align: end;\">\n    <button (click)=\"navigationService.goTo(ATM_STATES.LOGIN)\">Exit</button>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { AtmInfo, AtmStatus } from 'src/app/interfaces/app.interfaces';\n\n@Component({\n  selector: 'app-atm-list',\n  templateUrl: './atm-list.component.html',\n  styleUrls: ['./atm-list.component.scss']\n})\nexport class AtmListComponent implements OnInit {\n\n  @Input() atmList: AtmInfo[] =\n  [\n    {\n      \"id\" : 1,\n      \"address\" : \"Street numero uno\",\n      \"atmStatus\" : AtmStatus.IDLE,\n      \"banks\" : [ {\n        \"id\" : 1,\n        \"name\" : \"9 vbyv kozu kulakom\"\n      } ]\n    }, {\n      \"id\" : 2,\n      \"address\" : \"Street numero dos\",\n      \"atmStatus\" : AtmStatus.IDLE,\n      \"banks\" : [ {\n        \"id\" : 1,\n        \"name\" : \"9 vbyv kozu kulakom\"\n      }, {\n        \"id\" : 2,\n        \"name\" : \"Bank number2\"\n      } ]\n    }, {\n      \"id\" : 3,\n      \"address\" : \"Street numero uno\",\n      \"atmStatus\" : AtmStatus.IDLE,\n      \"banks\" : [ {\n        \"id\" : 3,\n        \"name\" : \"9 vbyv kozu kulakom\"\n      } ]\n    }\n  ];\n\n  selectedIndex = new BehaviorSubject<number | null>(null);\n\n  @Output() onAtmSelect = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  selectItem(index: number) {\n    this.selectedIndex.next(index);\n    this.onAtmSelect.emit(this.atmList[index]);\n  }\n\n}\n","<div class=\"atm-list\">\n  <ul class=\"tree-view\">\n    <li>ATM List</li>\n    <ul>\n      <li *ngFor=\"let atm of atmList; let i = index\" [ngClass]=\"{'atm-list-item': true, 'atm-list-item__selected': (selectedIndex | async) === i}\" (click)=\"selectItem(i)\">\n        {{atm.id}}: {{atm.address}}\n      </li>\n    </ul>\n  </ul>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { AtmInfo } from 'src/app/interfaces/app.interfaces';\nimport { AccountService } from 'src/app/services/account.service';\nimport { AtmHttpService } from 'src/app/services/atm-http.service';\n\n@Component({\n  selector: 'app-atm-login',\n  templateUrl: './atm-login.component.html',\n  styleUrls: ['./atm-login.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AtmLoginComponent implements OnInit {\n\n  constructor(\n    private fb: FormBuilder,\n    private atmHttpService: AtmHttpService,\n    private accountService: AccountService\n  ) {\n    this.loginForm.disable();\n   }\n\n  @Input() selectedAtm$!: BehaviorSubject<AtmInfo | null>;\n  @Output() afterLogin = new EventEmitter<void>();\n\n  loginForm = this.fb.group(\n    {\n      cardNumber: new FormControl('', [Validators.required, Validators.maxLength(16), Validators.minLength(16)]),\n      pinCode: new FormControl('', [Validators.required, Validators.maxLength(4), Validators.minLength(4)]),\n    }\n  )\n  isVerified$ = new BehaviorSubject<boolean>(false);\n\n  ngOnInit() {\n    this.selectedAtm$.next(null);\n    this.accountService.cardNumber = null;\n    this.selectedAtm$.subscribe(atm => {\n      if (atm) {\n        this.loginForm.enable();\n        this.loginForm.reset();\n        this.accountService.cardNumber = null;\n      }\n      this.loginForm.patchValue({cardNumber: '2440735783328557', pinCode: '5384'});\n      this.isVerified$.next(false);\n    });\n\n    this.loginForm.get('cardNumber')?.valueChanges.subscribe(val => {\n      this.loginForm.get('cardNumber')?.setValue(val?.replace(/\\s/g, '') ?? '', {emitEvent: false});\n    })\n  }\n\n  submitAction() {\n    // this.loginForm.markAllAsTouched();\n\n    if (this.loginForm.get('cardNumber')?.invalid ||\n      (this.loginForm.get('pinCode')?.invalid && this.isVerified$.value) ||\n      !this.selectedAtm$.value?.id) {\n        this.loginForm.markAllAsTouched();\n        return;\n    }\n\n    if (!this.isVerified$.value && this.selectedAtm$.value?.id) {\n      this.loginForm.get('cardNumber')?.markAllAsTouched();\n      this.atmHttpService.verifyAtm(this.loginForm.get('cardNumber')?.value!, this.selectedAtm$.value.id)\n      .subscribe(\n        {\n          next: () => {\n            this.loginForm.get('cardNumber')?.disable();\n            this.accountService.cardNumber = this.loginForm.get('cardNumber')?.value ?? null;\n            this.isVerified$.next(true);\n          },\n          error: err => {\n            if (err.status == 400) {\n              this.loginForm.get('cardNumber')?.setErrors({invalidCard: true});\n              this.accountService.cardNumber = null;\n            }\n            else {\n              this.loginForm.get('cardNumber')?.setErrors({httpError: true});\n            }\n            this.isVerified$.next(false);\n          }\n        }\n      )\n      return;\n    }\n    this.loginForm.markAllAsTouched();\n\n    this.atmHttpService.loginToAtm(\n      this.loginForm.get('cardNumber')!.value!,\n      this.loginForm.get('pinCode')!.value!,\n      this.selectedAtm$.value.id\n    )\n    .subscribe(\n      {\n        next: () => {\n        this.afterLogin.emit();\n        },\n        error: err => {\n          if (err.status == 400) {\n            this.loginForm.get('pinCode')?.setErrors({invalidPinCode: true}, {emitEvent: true});\n          }\n          else {\n            this.loginForm.get('pinCode')?.setErrors({httpError: true}, {emitEvent: true});\n          }\n          this.isVerified$.next(true);\n        }\n      }\n    )\n  }\n\n}\n","<div class=\"atm-login\" [formGroup]=\"loginForm\">\n  <!-- <div class=\"error-border\" *ngIf=\"loginForm.invalid\">\n    <span *ngIf=\"loginForm\">{{loginForm}}</span>\n  </div> -->\n    <div class=\"field-row\">\n      <label for=\"cardNumber\"><u>C</u>ard number:</label>\n      <input fxFlex=\"60\" id=\"cardNumber\" formControlName=\"cardNumber\"  [autocomplete]=\"false\" type=\"text\"/>\n      <div class=\"error-border\" fxFlex=\"100\" *ngIf=\"loginForm.get('cardNumber')?.invalid && loginForm.get('cardNumber')?.touched\">\n        {{loginForm.get('cardNumber').errors['minLength'] | json}}\n        <span *ngIf=\"loginForm.get('cardNumber').errors?.['minlength'] || loginForm.get('cardNumber').errors?.['maxlength']\">\n          Card number lenght must be 16 characters.\n        </span>\n        <span *ngIf=\"loginForm.get('cardNumber').errors?.['required']\">\n          Required.\n        </span>\n        <span *ngIf=\"loginForm.get('cardNumber').errors?.['invalidCard']\">\n          This card is not supported by this ATM.\n        </span>\n        <span *ngIf=\"loginForm.get('cardNumber').errors?.['httpError']\">\n          An error occured, try again later.\n        </span>\n      </div>\n    </div>\n    <div class=\"field-row\" *ngIf=\"isVerified$ | async\">\n      <label for=\"pinCode\"><u>P</u>in Code:</label>\n      <input fxFlex=\"60\" id=\"pinCode\" formControlName=\"pinCode\" type=\"password\"/>\n      <div class=\"error-border\" fxFlex=\"100\" *ngIf=\"loginForm.get('pinCode')?.invalid && loginForm.get('pinCode')?.touched\">\n        {{loginForm.get('pinCode').errors['minLength'] | json}}\n        <span *ngIf=\"loginForm.get('pinCode').errors?.['minlength'] || loginForm.get('pinCode').errors?.['maxlength']\">\n          Pin code lenght must be 4 characters.\n        </span>\n        <span *ngIf=\"loginForm.get('pinCode').errors?.['required']\">\n          Required.\n        </span>\n        <span *ngIf=\"loginForm.get('pinCode').errors?.['invalidPinCode']\">\n          Pin code is incorrect.\n        </span>\n        <span *ngIf=\"loginForm.get('pinCode').errors?.['httpError']\">\n          An error occured, try again later.\n        </span>\n      </div>\n    </div>\n    <button type=\"submit\" [disabled]=\"!(selectedAtm$ | async)\" (click)=\"submitAction()\" style=\"margin-top: 10px; width: 50px;\">{{(isVerified$ | async) ? 'Login' : 'Verify'}}</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AtmStates } from 'src/app/interfaces/app.interfaces';\nimport { AccountService } from 'src/app/services/account.service';\nimport { NavigationService } from 'src/app/services/navigation.service';\n\n@Component({\n  selector: 'app-atm-main-menu',\n  templateUrl: './atm-main-menu.component.html',\n  styleUrls: ['./atm-main-menu.component.scss']\n})\nexport class AtmMainMenuComponent implements OnInit {\n\n  ATM_STATES = AtmStates;\n\n  constructor(\n    private accountService: AccountService,\n    public navigationService: NavigationService\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"atm-main-menu\">\n  \n  <app-atm-header></app-atm-header>\n\n  <div class=\"button-list\" >\n    <button (click)=\"navigationService.goTo(ATM_STATES.MY_ACCOUNTS)\">My Accounts</button>\n    <button (click)=\"navigationService.goTo(ATM_STATES.NEW_TRANSACTION)\">New Transaction</button>\n    <button (click)=\"navigationService.goTo(ATM_STATES.WITHDRAW)\">Withdraw</button>\n    <button (click)=\"navigationService.goTo(ATM_STATES.DEPOSIT)\">Deposit</button>\n    <button (click)=\"navigationService.goTo(ATM_STATES.TRANSACTION_HISTORY)\">Transactions History</button>\n    <button (click)=\"navigationService.goTo(ATM_STATES.CARD_INFO)\">Card Info</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { AtmInfo, AtmStates } from 'src/app/interfaces/app.interfaces';\nimport { AccountService } from 'src/app/services/account.service';\nimport { AtmHttpService } from 'src/app/services/atm-http.service';\n\n@Component({\n  selector: 'app-atm-window',\n  templateUrl: './atm-window.component.html',\n  styleUrls: ['./atm-window.component.scss']\n})\nexport class AtmWindowComponent implements OnInit {\n\n  atmList$ = new BehaviorSubject<AtmInfo[]>([]);\n\n  selectedAtm$ = new BehaviorSubject<AtmInfo | null>(null);\n\n  atmState$ = this.accountService.atmState$;\n\n  ATM_STATES = AtmStates;\n\n  constructor(\n    private atmHttpService: AtmHttpService,\n    private accountService: AccountService\n  ) {}\n\n  ngOnInit() {\n    this.atmHttpService.getAllAtm()\n      .subscribe(atmList => {\n        this.atmList$.next(atmList);\n      })\n  }\n\n  onAtmSelect(atm: AtmInfo) {\n    this.selectedAtm$.next(atm);\n  }\n\n  afterLogin() {\n    this.atmState$.next(AtmStates.MAIN_MENU);\n  }\n\n}\n","<div class=\"window\" style=\"width: 500px; height: 400px;\">\n  <div class=\"title-bar\">\n    <div class=\"title-bar-text\">ATM</div>\n    <div class=\"title-bar-controls\">\n      <button aria-label=\"Minimize\"></button>\n      <button aria-label=\"Maximize\"></button>\n      <button aria-label=\"Close\"></button>\n    </div>\n  </div>\n  <div class=\"window-body\" [ngSwitch]=\"atmState$ | async\">\n    <div *ngSwitchCase=\"ATM_STATES.LOGIN\" fxLayout=\"row\" fxLayoutAlign=\"space-between stretch\" fxFlex style=\"height: 100%;\">\n      <app-atm-list (onAtmSelect)=\"onAtmSelect($event)\" fxFlex=\"45\" [atmList]=\"atmList$ | async\"></app-atm-list>\n      <app-atm-login [selectedAtm$]=\"selectedAtm$\" (afterLogin)=\"afterLogin()\" fxFlex></app-atm-login>\n    </div>\n    <div *ngSwitchCase=\"ATM_STATES.MAIN_MENU\">\n      <app-atm-main-menu></app-atm-main-menu>\n    </div>\n    <div *ngSwitchCase=\"ATM_STATES.MY_ACCOUNTS\">\n      <app-my-accounts></app-my-accounts>\n    </div>\n  </div>\n</div>","export interface AtmInfo {\n    id: number;\n    address: string;\n    atmStatus: AtmStatus;\n    banks: Bank[];\n}\n\nexport interface Bank {\n  id: number;\n  name: string;\n}\n\nexport interface PlansResponse {\n  \n}\n\nexport interface Plan {\n\n}\n\nexport enum AtmStatus {\n  IDLE = 'IDLE',\n  // add\n}\n\nexport enum AtmStates {\n  LOGIN = 'Login',\n  MAIN_MENU = 'Main menu',\n  MY_ACCOUNTS = 'My accounts',\n  NEW_TRANSACTION = 'New transaction',\n  WITHDRAW = 'Withdraw',\n  DEPOSIT = 'Deposit',\n  TRANSACTION_HISTORY = 'Transaction history',\n  CARD_INFO = 'Card info',\n  NEW_ACCOUNT = 'New account'\n}","import { Component, OnInit } from '@angular/core';\nimport { AtmStates } from 'src/app/interfaces/app.interfaces';\nimport { NavigationService } from 'src/app/services/navigation.service';\n\n@Component({\n  selector: 'app-my-accounts',\n  templateUrl: './my-accounts.component.html',\n  styleUrls: ['./my-accounts.component.scss']\n})\nexport class MyAccountsComponent implements OnInit {\n\n  ATM_STATES = AtmStates;\n\n  constructor(\n    public navigationService: NavigationService\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"atm-my-accounts\">\n  <app-atm-header [lastState]=\"ATM_STATES.MAIN_MENU\"></app-atm-header>\n  <div class=\"my-accounts-features\">\n    <button (click)=\"navigationService.goTo(ATM_STATES.TRANSACTION_HISTORY)\">View history</button>\n    <button (click)=\"navigationService.goTo(ATM_STATES.NEW_ACCOUNT)\">New Account</button>\n  </div>\n  <hr>\n</div>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { AtmStates } from '../interfaces/app.interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  private _cardNumber: string | null = null;\n\n  set cardNumber(number: string | null) {\n    this._cardNumber = number;\n  }\n\n  get cardNumber(): string | null {\n    return this._cardNumber;\n  }\n\n  atmState$ = new BehaviorSubject<AtmStates>(AtmStates.LOGIN);\n\nconstructor() { }\n\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { AtmInfo, AtmStatus } from 'src/app/interfaces/app.interfaces';\nimport { environment } from 'src/environments/environment';\nimport { UtilsService } from './utils.service';\n\n@Injectable()\nexport class AtmHttpService {\n\nconstructor(\n    private http: HttpClient,\n    private utilsService: UtilsService\n) { }\n\n  getAllAtm(): Observable<AtmInfo[]> {\n      const url = `${environment.backApi}/atm/all`;\n\n      return this.http.get<AtmInfo[]>(url);\n\n      return of([\n          {\n            \"id\" : 1,\n            \"address\" : \"Street numero uno\",\n            \"atmStatus\" : AtmStatus.IDLE,\n            \"banks\" : [ {\n              \"id\" : 1,\n              \"name\" : \"9 vbyv kozu kulakom\"\n            } ]\n          }, {\n            \"id\" : 2,\n            \"address\" : \"Street numero dos\",\n            \"atmStatus\" : AtmStatus.IDLE,\n            \"banks\" : [ {\n              \"id\" : 1,\n              \"name\" : \"9 vbyv kozu kulakom\"\n            }, {\n              \"id\" : 2,\n              \"name\" : \"Bank number2\"\n            } ]\n          }, {\n            \"id\" : 3,\n            \"address\" : \"Street numero uno\",\n            \"atmStatus\" : AtmStatus.IDLE,\n            \"banks\" : [ {\n              \"id\" : 3,\n              \"name\" : \"9 vbyv kozu kulakom\"\n            } ]\n          }\n        ])\n  }\n\n  verifyAtm(cardNumber: string, atmId: number): Observable<void> {\n    const url = `${environment.backApi}/card/verify-atm-support-bank`;\n\n    // const headers = new HttpHeaders({'Access-Control-Allow-Origin': '*'});\n\n    return this.http.post<void>(url, {cardNumber, atmId}, {withCredentials: true});\n\n    // return of(undefined);\n  }\n\n  loginToAtm(number: string, pin: string, atm: number): Observable<void> {\n    const url = `${environment.appUrl}/login`;\n\n    const headers = new HttpHeaders({'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/x-www-form-urlencoded'});\n\n    return this.http.post<void>(url, this.utilsService.toUrlEncoded({number, pin, atm}), {headers});\n  }\n\n  // getPlans() {\n  //   this.http.get(`${environment.backApi}/account/plans`, {headers, withCredentials: true})\n  // }\n}\n","import { Injectable } from '@angular/core';\nimport { AtmStates } from '../interfaces/app.interfaces';\nimport { AccountService } from './account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigationService {\n\nconstructor(\n  private accountService: AccountService\n) { }\n\ngoTo(state: AtmStates) {\n  this.accountService.atmState$.next(state);\n}\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class UtilsService {\n\nconstructor() { }\n\n    toUrlEncoded(obj: Record<string, string | number | boolean>): string {\n        let str = [];\n        for(var p in obj)\n            str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n        return str.join(\"&\");\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  get appUrl(): string {\n    return 'http://localhost:8080';\n    // return 'https://c267-212-90-62-127.eu.ngrok.io';\n  },\n  get backApi(): string {\n    return `${this.appUrl}/api`\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["AtmStates","i0","AtmHeaderComponent","constructor","accountService","navigationService","atmState$","ngOnInit","selectors","inputs","lastState","decls","vars","consts","template","ctx","EventEmitter","BehaviorSubject","AtmStatus","AtmListComponent","IDLE","selectItem","index","selectedIndex","next","onAtmSelect","emit","atmList","outputs","FormBuilder","FormControl","Validators","AtmLoginComponent","fb","atmHttpService","group","cardNumber","required","maxLength","minLength","pinCode","loginForm","disable","selectedAtm$","subscribe","atm","enable","reset","patchValue","isVerified$","get","valueChanges","val","setValue","replace","emitEvent","submitAction","invalid","value","id","markAllAsTouched","verifyAtm","error","err","status","setErrors","invalidCard","httpError","loginToAtm","afterLogin","invalidPinCode","AtmWindowComponent","getAllAtm","atmList$","MAIN_MENU"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}